# Put parameters here that don't need to change on each machine where the app is deployed
# https://symfony.com/doc/current/best_practices/configuration.html#application-related-configuration
parameters:
    locale: 'en'
    article_image_path: '%kernel.project_dir%/public/images/product'

fos_ck_editor:
    configs:
        my_config:
            toolbar: standard
#            toolbar: full

services:
    # default configuration for services in *this* file
    _defaults:
        autowire: true      # Automatically injects dependencies in your services.
        autoconfigure: true # Automatically registers your services as commands, event subscribers, etc.
        public: false       # Allows optimizing the container by removing unused services; this also means
                            # fetching services directly from the container via $container->get() won't work.
                            # The best practice is to be explicit about your dependencies anyway.

    # makes classes in src/ available to be used as services
    # this creates a service per class whose id is the fully-qualified class name
    App\:
        resource: '../src/*'
        exclude: '../src/{Entity,Migrations,Tests,Kernel.php}'

    # controllers are imported separately to make sure services can be injected
    # as action arguments even if you don't extend any base controller class
    App\Controller\:
        resource: '../src/Controller'
        tags: ['controller.service_arguments']

    # add more service definitions when explicit configuration is needed
    # please note that last definitions always *replace* previous ones

    App\Handler\ArticleRequestHandler:
#        arguments: ['@Doctrine\ORM\EntityManagerInterface', '%article_image_path%', '@Symfony\Component\Asset\Packages']
        arguments:
            $article_image_path : '%article_image_path%'

#    App\Handler\UserRequestHandler:
#        arguments: ['@Doctrine\ORM\EntityManagerInterface', '@App\Factory\UserFactory']

    App\Handler\ArticleRequestUpdateHandler:
#        arguments: ['@Doctrine\ORM\EntityManagerInterface', '%article_image_path%', '@Symfony\Component\Asset\Packages']
        arguments:
            $article_image_path : '%article_image_path%'

    # Solution I
#    App\Service\ArticleCatalogue:
#        calls:
#            - ['addSource', ['@App\Article\ArticleAPISource']]
#            - ['addSource', ['@App\Article\ArticleDoctrineSource']]
#            - ['addSource', ['@App\Article\ArticleDoctrineSource']]

    # Solution II
#    App\Service\Source\ArticleYAMLSource:
#        tags:
#            - app.article_source
#    App\Service\Source\ArticleDoctrineSource:
#        tags:
#            - app.article_source
#    App\Service\Source\ArticleAPIProvider:
#        tags:
#            - app.article_source
#
#    App\Service\ArticleCatalogue:
#        calls:
#            - ['setSources', [!tagged app.article_source]]

    # Solution III
    _instanceof :
        App\Service\Source\ArticleAbstractSource:
            tags:
                - app.article_source

    App\Service\ArticleCatalogue:
        calls:
            - ['setSources', [!tagged app.article_source]]